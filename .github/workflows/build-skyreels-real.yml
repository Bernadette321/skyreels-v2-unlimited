name: Build SkyReels V2 Real Implementation

on:
  push:
    paths:
      - 'Dockerfile.skyreels-real'
      - 'api_server_real.py'
      - 'start_skyreels_real.sh'
      - 'download_models.py'
      - '.github/workflows/build-skyreels-real.yml'
  workflow_dispatch:

env:
  REGISTRY: docker.io
  IMAGE_NAME: oliviahayes/skyreels-v2-real

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Free disk space
      run: |
        # 删除不需要的软件和文件来释放空间
        sudo rm -rf /usr/share/dotnet
        sudo rm -rf /usr/local/lib/android
        sudo rm -rf /opt/ghc
        sudo rm -rf /opt/hostedtoolcache/CodeQL
        sudo rm -rf /usr/local/share/boost
        sudo rm -rf /usr/lib/jvm
        sudo rm -rf /usr/share/swift
        sudo apt-get remove -y '^llvm-.*'
        sudo apt-get remove -y '^libllvm.*'
        sudo apt-get autoremove -y
        sudo apt-get clean
        df -h

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        driver-opts: |
          image=moby/buildkit:buildx-stable-1
          network=host

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=raw,value=latest,enable={{is_default_branch}}
          type=raw,value=real-v{{date 'YYYYMMDD'}}-{{sha}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile.skyreels-real
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/amd64
        build-args: |
          BUILDKIT_INLINE_CACHE=1

    - name: Image digest
      run: echo ${{ steps.build.outputs.digest }}

    - name: Create deployment summary
      run: |
        echo "## 🎬 SkyReels V2 Real Implementation Build" >> $GITHUB_STEP_SUMMARY
        echo "✅ **镜像构建成功**" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📦 镜像信息" >> $GITHUB_STEP_SUMMARY
        echo "- **镜像名称**: \`${{ env.IMAGE_NAME }}\`" >> $GITHUB_STEP_SUMMARY
        echo "- **标签**: \`latest\`, \`real-v$(date +%Y%m%d)-$(echo $GITHUB_SHA | cut -c1-7)\`" >> $GITHUB_STEP_SUMMARY
        echo "- **平台**: linux/amd64" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 🚀 RunPod部署命令" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
        echo "docker run -d \\" >> $GITHUB_STEP_SUMMARY
        echo "  --name skyreels-v2-real \\" >> $GITHUB_STEP_SUMMARY
        echo "  --gpus all \\" >> $GITHUB_STEP_SUMMARY
        echo "  -p 8000:8000 \\" >> $GITHUB_STEP_SUMMARY
        echo "  -v /workspace/models:/app/models \\" >> $GITHUB_STEP_SUMMARY
        echo "  -v /workspace/outputs:/app/outputs \\" >> $GITHUB_STEP_SUMMARY
        echo "  ${{ env.IMAGE_NAME }}:latest" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY 