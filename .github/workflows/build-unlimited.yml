name: Build SkyReels V2 Unlimited Docker Image

on:
  push:
    branches: [ main, master ]
    paths:
      - 'skyreelsv2/**'
      - '.github/workflows/build-unlimited.yml'
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # 手动触发
    inputs:
      tag:
        description: 'Docker image tag'
        required: false
        default: 'latest'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: skyreels-v2-unlimited

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}
          type=raw,value=${{ github.event.inputs.tag }},enable=${{ github.event_name == 'workflow_dispatch' }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./skyreelsv2
        file: ./skyreelsv2/Dockerfile.unlimited
        platforms: linux/amd64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: |
          BUILDKIT_INLINE_CACHE=1

    - name: Generate deployment instructions
      run: |
        echo "## 🚀 部署说明" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 镜像信息" >> $GITHUB_STEP_SUMMARY
        echo "- **镜像地址**: \`${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:latest\`" >> $GITHUB_STEP_SUMMARY
        echo "- **构建时间**: $(date)" >> $GITHUB_STEP_SUMMARY
        echo "- **Git提交**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### RunPod部署命令" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
        echo "docker run -d \\" >> $GITHUB_STEP_SUMMARY
        echo "  --name skyreels-unlimited \\" >> $GITHUB_STEP_SUMMARY
        echo "  --gpus all \\" >> $GITHUB_STEP_SUMMARY
        echo "  --restart unless-stopped \\" >> $GITHUB_STEP_SUMMARY
        echo "  -p 8000:8000 \\" >> $GITHUB_STEP_SUMMARY
        echo "  -v /workspace/outputs:/app/outputs \\" >> $GITHUB_STEP_SUMMARY
        echo "  -v /workspace/cache:/app/cache \\" >> $GITHUB_STEP_SUMMARY
        echo "  -v /workspace/logs:/app/logs \\" >> $GITHUB_STEP_SUMMARY
        echo "  -e SKYREELS_UNLIMITED_MODE=true \\" >> $GITHUB_STEP_SUMMARY
        echo "  -e SKYREELS_MAX_DURATION=7200 \\" >> $GITHUB_STEP_SUMMARY
        echo "  -e SKYREELS_ENABLE_4K=true \\" >> $GITHUB_STEP_SUMMARY
        echo "  --shm-size=2g \\" >> $GITHUB_STEP_SUMMARY
        echo "  ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:latest" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY

  # 可选：Docker Hub并行构建
  build-dockerhub:
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    needs: build
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push to Docker Hub
      uses: docker/build-push-action@v5
      with:
        context: ./skyreelsv2
        file: ./skyreelsv2/Dockerfile.unlimited
        platforms: linux/amd64
        push: true
        tags: |
          ${{ secrets.DOCKERHUB_USERNAME }}/skyreels-v2:unlimited
          ${{ secrets.DOCKERHUB_USERNAME }}/skyreels-v2:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max 